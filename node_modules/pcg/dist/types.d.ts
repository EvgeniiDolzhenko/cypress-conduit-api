import Long from 'long';
export declare enum OutputFnType {
    XSH_RR = 0
}
export type OutputFn = (state: Long) => number;
export declare enum StreamScheme {
    SETSEQ = 0,
    ONESEQ = 1,
    MCG = 3
}
export type SchemeFn = () => Long;
export type PCGConfig = {
    numOutputBits: number;
    multiplier: Long;
    increment: Long;
    outputFns: Record<OutputFnType, OutputFn>;
};
export type PCGState = {
    state: Long;
    streamId: Long;
    algorithm: {
        streamScheme: StreamScheme;
        outputFnType: OutputFnType;
        outputMaxRange: number;
        multiplier: Long;
        increment: Long;
    };
    getOutput: OutputFn;
};

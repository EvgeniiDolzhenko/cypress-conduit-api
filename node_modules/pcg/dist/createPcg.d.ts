import { PCGState } from './types';
export declare const stepState: import("ts-toolbelt/out/Function/Curry").Curry<(delta: number, pcg: PCGState) => PCGState>;
export declare const nextState: import("ts-toolbelt/out/Function/Curry").Curry<(pcg: PCGState) => PCGState>;
export declare const prevState: import("ts-toolbelt/out/Function/Curry").Curry<(pcg: PCGState) => PCGState>;
export declare const randomInt: import("ts-toolbelt/out/Function/Curry").Curry<(min: number, max: number, pcg: PCGState) => [number, PCGState]>;
export declare const randomList: import("ts-toolbelt/out/Function/Curry").Curry<(length: any, rng: any, pcg: any) => [number, PCGState][]>;
declare const _default: import("ts-toolbelt/out/Function/Curry").Curry<({ numOutputBits, multiplier, increment, outputFns }: any, { streamScheme, outputFnType }: any, initState: any, initStreamId: any) => PCGState>;
export default _default;
